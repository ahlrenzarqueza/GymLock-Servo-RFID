"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Type_1 = require("./Type");
const util_1 = require("util");
const OPTION_REGEXP = /^\-+([\s\S]*)/i;
class Option {
    constructor(names, type) {
        this.names = util_1.isArray(names) ? names : [names];
        this.type = util_1.isString(type) ? Type_1.builtInTypes.get(type) : type;
        this.type = this.type || Type_1.builtInTypes.get("string");
    }
    has(name) {
        return this.names.indexOf(name) > -1;
    }
    /**
     * 检查是否匹配
     * @param value 检查的值
     */
    testValue(value) {
        return this.type.regexp.test(value);
    }
    static test(str) {
        return OPTION_REGEXP.test(str);
    }
    /**
     * 修整选项名
     * @param name 名称
     */
    static trim(name) {
        if (!OPTION_REGEXP.test(name))
            return name;
        return OPTION_REGEXP.exec(name)[1];
    }
}
exports.Option = Option;
class OptionList extends Array {
    get(name) {
        return this.find(item => item.has(name));
    }
}
exports.OptionList = OptionList;
